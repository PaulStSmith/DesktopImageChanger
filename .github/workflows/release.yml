name: Create Release

on:
  repository_dispatch:
    types: [create-release]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  create-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
        
    - name: Install NSIS
      run: |
        choco install nsis -y
        
    - name: Build and create installer
      run: |
        echo "Building WorldMapWallpaper..."
        
        # Clean previous build
        if (Test-Path "bin\publish-64\") { Remove-Item -Recurse -Force "bin\publish-64\" }
        
        # Build solution first
        msbuild DesktopImageChanger.sln /p:Configuration=Release /p:Platform="Any CPU" /p:RuntimeIdentifiers=win-x64 /v:m
        
        # Publish with MSBuild (not dotnet publish to avoid assembly info conflicts)
        msbuild WorldMapWallpaper.csproj /p:PublishProfile=Publish_x64 /p:Configuration=Release /t:Publish /v:m
        
        echo "Creating installer..."
        makensis InstallMaker.nsi
        
    - name: Get version from assembly
      id: get-version
      run: |
        $version = "v1.0.0"
        if (Test-Path "Properties\AssemblyInfo.cs") {
          $content = Get-Content "Properties\AssemblyInfo.cs"
          $versionLine = $content | Where-Object { $_ -match 'AssemblyVersion\("([^"]+)"\)' }
          if ($versionLine) {
            $version = "v" + $matches[1]
          }
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Release version: $version"
        
    - name: Create Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get-version.outputs.version }}
        release_name: WorldMapWallpaper ${{ steps.get-version.outputs.version }}
        body: |
          ## WorldMapWallpaper Release ${{ steps.get-version.outputs.version }}
          
          ### What's New
          - Real-time day/night cycle visualization
          - International Space Station tracking
          - Enhanced wallpaper generation
          
          ### Installation
          Download and run `Install.exe` to install WorldMapWallpaper.
          
          The application will automatically:
          - Set up scheduled tasks for automatic wallpaper updates
          - Create necessary Windows Event Log sources
          - Configure proper permissions
          
          ### System Requirements
          - Windows 10 version 1809 or later
          - .NET 9.0 Runtime (included in installer)
        draft: false
        prerelease: false
        
    - name: Upload installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./Install.exe
        asset_name: Install.exe
        asset_content_type: application/octet-stream